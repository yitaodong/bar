var valueLabelWidth = 40;           
var barHeight = 20;            
var barLabelWidth = 100;          
var barLabelPadding = 5;              
var gridLabelHeight = 18;                  
var gridChartOffset = 3;                  
var maxBarWidth = 420;                
            
            
var barLabel = function(d) { return d['GAME']; };            
var barValue = function(d) { return parseFloat(d['DRB']); };                 
           
var yScale = d3.scale.ordinal().domain(d3.range(0, data.length)).rangeBands([0, data.length * barHeight]);            
var y = function(d, i) { return yScale(i); };            
var yText = function(d, i) { return y(d, i) + yScale.rangeBand() / 2; };             
var x = d3.scale.linear().domain([0, d3.max(data, barValue)]).range([0, maxBarWidth]);                
           
var chart = d3.select('#chart').append("svg")            
  .attr('width', maxBarWidth + barLabelWidth + valueLabelWidth)              
  .attr('height', gridLabelHeight + gridChartOffset + data.length * barHeight);                 
               
var gridContainer = chart.append('g')              
  .attr('transform', 'translate(' + barLabelWidth + ',' + gridLabelHeight + ')');                 
gridContainer.selectAll("text").data(x.ticks(10)).enter().append("text")                     
  .attr("x", x)             
  .attr("dy", -3)               
  .attr("text-anchor", "middle")                  
  .text(String);                         
                           
gridContainer.selectAll("line").data(x.ticks(10)).enter().append("line")             
  .attr("x1", x)                   
  .attr("x2", x)                       
  .attr("y1", 0)                        
  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)                            
  .style("stroke", "#ccc");                        
                       
var labelsContainer = chart.append('g')             
  .attr('transform', 'translate(' + (barLabelWidth - barLabelPadding) + ',' + (gridLabelHeight + gridChartOffset) + ')');                      
labelsContainer.selectAll('text').data(data).enter().append('text')                                    
  .attr('y', yText)                  
  .attr('stroke', 'none')                 
  .attr('fill', 'black')            
  .attr("dy", ".35em")              
  .attr('text-anchor', 'end')                       
  .text(barLabel);                          
                      
var barsContainer = chart.append('g')                     
  .attr('transform', 'translate(' + barLabelWidth + ',' + (gridLabelHeight + gridChartOffset) + ')');                  
barsContainer.selectAll("rect").data(data).enter().append("rect")                              
  .attr('y', y)               
  .attr('height', yScale.rangeBand())                   
  .attr('width', function(d) { return x(barValue(d)); })                       
  .attr('stroke', 'white')                    
  .attr('fill', 'steelblue');                         
                           
barsContainer.selectAll("text").data(data).enter().append("text")                     
  .attr("x", function(d) { return x(barValue(d)); })                      
  .attr("y", yText)                 
  .attr("dx", 3) // padding-left                         
  .attr("dy", ".35em") // vertical-align: middle                       
  .attr("text-anchor", "start") // text-align: right         
  .attr("fill", "black")                   
  .attr("stroke", "none")                      
  .text(function(d) { return d3.round(barValue(d), 2); });                 
                 
barsContainer.append("line")             
  .attr("y1", -gridChartOffset)                    
  .attr("y2", yScale.rangeExtent()[1] + gridChartOffset)                    
  .style("stroke", "#000");                  
